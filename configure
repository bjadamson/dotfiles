#!/usr/bin/env python2.7
import os, sys
from os.path import expanduser
import shutil

def symlink_vim(prefix, homedir):
    dst = homedir + '/.vim'
    val = os.system('unlink ' + dst)
    os.symlink(prefix + '/vim', dst)
    print "val '" + str(val) + "'"

def clone_vundle(homedir):
    dst = homedir + '/.vim/bundle/Vundle.vim'
    print dst
    if os.path.exists(dst):
        shutil.rmtree(dst)
    os.system('git clone https://github.com/gmarik/Vundle.vim.git ' + dst)

def symlink_git(prefix, homedir):
    dst = homedir + '/.gitconfig'
    if os.path.islink(dst):
        val = os.unlink(dst)
    val = os.symlink(prefix + '/git/gitconfig', dst)
    print "val '" + str(val) + "'"

def symlink_fish(prefix, homedir):
    dst = homedir + '/.config/fish'
    if os.path.islink(dst):
        os.unlink(dst)
    val = os.symlink(prefix + '/fish', dst)
    print "val '" + str(val) + "'"

def symlink_amethyst(prefix, homedir):
    dst = homedir + '/.config/amethyst'
    if os.path.islink(dst):
        os.unlink(dst)
    val = os.symlink(prefix + '/amethyst', dst)
    print "val '" + str(val) + "'"

"""AFTER the symlink to the vim directory has been created, we can then only clone the vundle
package.
"""
def main(argv):
    """The only ordering that matters here is that
    1. Create VIM symlink
    2. Clone the vundle package.
    """
    prefix = sys.path[0]
    homedir = expanduser("~")
    symlink_vim(prefix, homedir)
    clone_vundle(homedir)
    symlink_git(prefix, homedir)
    symlink_fish(prefix, homedir)
    symlink_amethyst(prefix, homedir)
    print "Done"

main(sys.argv)
